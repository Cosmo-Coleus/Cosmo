[bump]
features_always_bump_minor = true
breaking_always_bump_major = true
initial_tag = "0.1.0"

[changelog]
header = """
# Changelog\n
"""
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{%- macro print_commit(commit) -%}
    - {{ commit.message | trim_end_matches(pat="\n") | upper_first }} ([{{ commit.id | truncate(length=7, end="") }}]({{ self::remote_url() }}/commit/{{ commit.id }}))
{%- endmacro -%}

{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}]\
          ({{ self::remote_url() }}/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}\
        ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## [unreleased]
{% endif %}\

{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        {{ self::print_commit(commit=commit) }}
    {%- endfor -%}
    {% raw %}\n {% endraw %}\
    {%- for commit in commits %}
        {%- if not commit.scope -%}
            {{ self::print_commit(commit=commit) }}
        {% endif -%}
    {% endfor -%}
{% endfor %}\n
"""
trim = true

postprocessors = [
    { pattern = 'Breaking:', replace = '💥' },
    { pattern = 'Feat:', replace = '✨' },
    { pattern = 'Hotfix:', replace = '🚑' },
    { pattern = 'Deprecate:', replace = '🗑️' },
    { pattern = 'Add-dependency:', replace = '➕' },
    { pattern = 'Upgrade-dependency:', replace = '⬆️' },
    { pattern = 'Fix:', replace = '🐛' },
    { pattern = 'Simple-fix:', replace = '🩹' },
    { pattern = 'Performance:', replace = '⚡' },
    { pattern = 'Security:', replace = '🔒' }
]

[git]
conventional_commits = false
filter_unconventional = false
split_commits = false
commit_preprocessors = [
    { pattern = '^💥', replace = 'breaking:' },
    { pattern = '^✨', replace = 'feat:' },
    { pattern = '^🚑', replace = 'hotfix:' },
    { pattern = '^🗑️', replace = 'deprecate:' },
    { pattern = '^➕', replace = 'add-dependency:' },
    { pattern = '^⬆️', replace = 'upgrade-dependency:' },
    { pattern = '^🐛', replace = 'fix:' },
    { pattern = '^🩹', replace = 'simple-fix:' },
    { pattern = '^⚡', replace = 'performance:' },
    { pattern = '^🔒', replace = 'security:' }
]

commit_parsers = [
    { message = "^breaking:", group = "<!-- 0 -->💥 Breaking Changes" },
    { message = "^feat:", group = "<!-- 1 -->✨ Features" },
    { message = "^hotfix:", group = "<!-- 2 -->🚑 Hotfix" },
    { message = "^deprecate:", group = "<!-- 3 -->🗑️ Deprecate Code or Dependencies" },
    { message = "^add-dependency:", group = "<!-- 4 -->➕ Add Dependencies" },
    { message = "^upgrade-dependency:", group = "<!-- 5 -->⬆️ Upgrade Dependencies" },
    { message = "^fix:", group = "<!-- 6 -->🐛 Bug Fixes" },
    { message = "^simple-fix:", group = "<!-- 7 -->🩹 Simple Fixes" },
    { message = "^performance:", group = "<!-- 8 -->⚡ Performance" },
    { body = "^security:", group = "<!-- 9 -->🔒 Security" }
]
protect_breaking_commits = false
filter_commits = false
tag_pattern = "v*.*"
topo_order = false
sort_commits = "oldest"

